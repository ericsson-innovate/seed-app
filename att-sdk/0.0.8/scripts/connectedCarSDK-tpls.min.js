angular.module("connectedCarSDK",["connectedCarSDK.tpls","connectedCarSDK.attAlert","connectedCarSDK.attBadge","connectedCarSDK.attButtons","connectedCarSDK.attCarousel","connectedCarSDK.attCheckbox","connectedCarSDK.attContent","connectedCarSDK.attDrawer","connectedCarSDK.attDropdown","connectedCarSDK.attFooter","connectedCarSDK.attHeader","connectedCarSDK.attInput","connectedCarSDK.attListView","connectedCarSDK.attLoader","connectedCarSDK.attMediaPlayer","connectedCarSDK.attMenu","connectedCarSDK.attModal","connectedCarSDK.attPinPad","connectedCarSDK.attProgressBar","connectedCarSDK.attRadio","connectedCarSDK.attSimError","connectedCarSDK.attSlider","connectedCarSDK.attTab","connectedCarSDK.attTabset","connectedCarSDK.attToggleSwitch","connectedCarSDK.attVehicleInMotion","connectedCarSDK.transition"]),angular.module("connectedCarSDK.transition",[]).factory("$transition",["$q","$timeout","$rootScope",function($q,$timeout,$rootScope){function findEndEventName(endEventNames){for(var name in endEventNames)if(void 0!==transElement.style[name])return endEventNames[name]}var $transition=function(element,trigger,options){options=options||{};var deferred=$q.defer(),endEventName=$transition[options.animation?"animationEndEventName":"transitionEndEventName"],transitionEndHandler=function(){$rootScope.$apply(function(){element.unbind(endEventName,transitionEndHandler),deferred.resolve(element)})};return endEventName&&element.bind(endEventName,transitionEndHandler),$timeout(function(){angular.isString(trigger)?element.addClass(trigger):angular.isFunction(trigger)?trigger(element):angular.isObject(trigger)&&element.css(trigger),endEventName||deferred.resolve(element)}),deferred.promise.cancel=function(){endEventName&&element.unbind(endEventName,transitionEndHandler),deferred.reject("Transition cancelled")},deferred.promise},transElement=document.createElement("trans"),transitionEndEventNames={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd",transition:"transitionend"},animationEndEventNames={WebkitTransition:"webkitAnimationEnd",MozTransition:"animationend",OTransition:"oAnimationEnd",transition:"animationend"};return $transition.transitionEndEventName=findEndEventName(transitionEndEventNames),$transition.animationEndEventName=findEndEventName(animationEndEventNames),$transition}]),angular.module("connectedCarSDK.attAlert",[]).constant("alertConfig",{type:"info",max:100,min:0}).factory("alertProvider",["$timeout","alertConfig",function($timeout,alertConfig){return{alerts:[],timeoutPromise:null,addAlert:function(scope){scope.alert={type:angular.isDefined(scope.type)?scope.type:alertConfig.type,onClose:angular.isDefined(scope.onClose)?scope.onClose:null,onClick:angular.isDefined(scope.onClick)?scope.onClick:null,showIcon:angular.isDefined(scope.showIcon)?scope.showIcon:!1,showConfirmationBtn:angular.isDefined(scope.showConfirmationBtn)?scope.showConfirmationBtn:!1,buttonText:angular.isDefined(scope.buttonText)?scope.buttonText:"",autoCloseInterval:angular.isDefined(scope.autoCloseInterval)?scope.autoCloseInterval:null,title:angular.isDefined(scope.title)?scope.title:""},0===this.alerts.length&&(scope.alert.isActive=!0),this.alerts.push(scope.alert)},removeActiveAlert:function(){this.alerts[0].isActive=!1,this.alerts.splice(0,1),this.alerts.length>0&&(this.alerts[0].isActive=!0)},closeAlert:function(){this.timeoutPromise&&$timeout.cancel(this.timeoutPromise),this.alerts[0].onClose(),this.removeActiveAlert(),this.handleAutoClose()},handleAutoClose:function(){if(this.alerts[0]&&this.alerts[0].autoCloseInterval&&parseInt(this.alerts[0].autoCloseInterval)>0){var that=this;this.timeoutPromise=$timeout(function(){that.closeAlert()},this.alerts[0].autoCloseInterval)}}}}]).factory("$alert",["$rootScope","$compile","$document",function($rootScope,$compile,$document){return{show:function(options){var angularDomEl=angular.element('<att-alert on-close="onClose()" on-click="onClick()">'+options.text+"</att-alert>");angularDomEl.attr({type:options.type,title:options.title,"show-icon":options.showIcon,"show-confirmation-btn":options.showConfirmationBtn,"button-text":options.buttonText,"auto-close-interval":options.autoCloseInterval?options.autoCloseInterval:null});var alertScope=$rootScope.$new(!1);alertScope.onClose=options.onClose?options.onClose:null,alertScope.onClick=options.onClick?options.onClick:null;var alertDomEl=$compile(angularDomEl)(alertScope);$document.find("body").eq(0).append(alertDomEl)},info:function(options){options.type="info",this.show(options)},success:function(options){options.type="success",this.show(options)},danger:function(options){options.type="danger",this.show(options)}}}]).directive("attAlert",["alertProvider","$animate",function(alertProvider,$animate){return{restrict:"AE",templateUrl:"templates/attAlert.html",replace:!0,transclude:!0,scope:{type:"@",showIcon:"=",showConfirmationBtn:"=",buttonText:"@",onClick:"&",onClose:"&",autoCloseInterval:"=",title:"@",text:"@"},link:function(scope,element){$animate.enabled(element,!1),alertProvider.addAlert(scope),scope.alert.isActive&&alertProvider.handleAutoClose(),scope.close=function(){scope.showConfirmationBtn||alertProvider.closeAlert()},scope.btnClick=function(){scope.onClick(),alertProvider.closeAlert()},scope.$on("$destroy",function(){scope.alert.isActive&&alertProvider.closeAlert()})}}}]),angular.module("connectedCarSDK.attBadge",[]).directive("attBadge",function(){return{templateUrl:"templates/attBadge.html",restrict:"E",replace:!0,scope:{value:"@",badgeType:"@"},link:function(){}}}),angular.module("connectedCarSDK.attButtons",[]).constant("buttonConfig",{activeClass:"active",toggleEvent:"click"}).controller("ButtonsController",["buttonConfig",function(buttonConfig){this.activeClass=buttonConfig.activeClass||"active",this.toggleEvent=buttonConfig.toggleEvent||"click"}]).directive("attBtnRadio",function(){return{require:["attBtnRadio","ngModel"],controller:"ButtonsController",link:function(scope,element,attrs,ctrls){var buttonsCtrl=ctrls[0],ngModelCtrl=ctrls[1];ngModelCtrl.$render=function(){element.toggleClass(buttonsCtrl.activeClass,angular.equals(ngModelCtrl.$modelValue,scope.$eval(attrs.attBtnRadio)))},element.bind(buttonsCtrl.toggleEvent,function(){var isActive=element.hasClass(buttonsCtrl.activeClass);(!isActive||angular.isDefined(attrs.uncheckable))&&scope.$apply(function(){ngModelCtrl.$setViewValue(isActive?null:scope.$eval(attrs.attBtnRadio)),ngModelCtrl.$render()})})}}}).directive("attBtnCheckbox",function(){return{require:["attBtnCheckbox","ngModel"],controller:"ButtonsController",link:function(scope,element,attrs,ctrls){function getTrueValue(){return getCheckboxValue(attrs.attBtnCheckboxTrue,!0)}function getFalseValue(){return getCheckboxValue(attrs.attBtnCheckboxFalse,!1)}function getCheckboxValue(attributeValue,defaultValue){var val=scope.$eval(attributeValue);return angular.isDefined(val)?val:defaultValue}var buttonsCtrl=ctrls[0],ngModelCtrl=ctrls[1];ngModelCtrl.$render=function(){element.toggleClass(buttonsCtrl.activeClass,angular.equals(ngModelCtrl.$modelValue,getTrueValue()))},element.bind(buttonsCtrl.toggleEvent,function(){scope.$apply(function(){ngModelCtrl.$setViewValue(element.hasClass(buttonsCtrl.activeClass)?getFalseValue():getTrueValue()),ngModelCtrl.$render()})})}}}),angular.module("connectedCarSDK.attCarousel",["connectedCarSDK.transition"]).controller("CarouselController",["$scope","$timeout","$transition","$animate",function($scope,$timeout,$transition,$animate){function restartTimer(){resetTimer();var interval=+$scope.interval;!isNaN(interval)&&interval>=0&&(currentTimeout=$timeout(timerFn,interval))}function resetTimer(){currentTimeout&&($timeout.cancel(currentTimeout),currentTimeout=null)}function timerFn(){isPlaying?($scope.next(),restartTimer()):$scope.pause()}$animate.enabled(!1);var currentTimeout,isPlaying,self=this,slides=self.slides=$scope.slides=[],currentIndex=-1;self.currentSlide=null;var destroyed=!1;self.select=$scope.select=function(nextSlide,direction){function goNext(){destroyed||(self.currentSlide&&angular.isString(direction)&&!$scope.noTransition&&nextSlide.$element?(nextSlide.$element.addClass(direction),nextSlide.$element[0].offsetWidth,angular.forEach(slides,function(slide){angular.extend(slide,{direction:"",entering:!1,leaving:!1,active:!1})}),angular.extend(nextSlide,{direction:direction,active:!0,entering:!0}),angular.extend(self.currentSlide||{},{direction:direction,leaving:!0}),$scope.$currentTransition=$transition(nextSlide.$element,{}),function(next,current){$scope.$currentTransition.then(function(){transitionDone(next,current)},function(){transitionDone(next,current)})}(nextSlide,self.currentSlide)):transitionDone(nextSlide,self.currentSlide),self.currentSlide=nextSlide,currentIndex=nextIndex,restartTimer())}function transitionDone(next,current){angular.extend(next,{direction:"",active:!0,leaving:!1,entering:!1}),angular.extend(current||{},{direction:"",active:!1,leaving:!1,entering:!1}),$scope.$currentTransition=null}var nextIndex=slides.indexOf(nextSlide);void 0===direction&&(direction=nextIndex>currentIndex?"next":"prev"),nextSlide&&nextSlide!==self.currentSlide&&($scope.$currentTransition?($scope.$currentTransition.cancel(),$timeout(goNext)):goNext())},$scope.$on("$destroy",function(){destroyed=!0}),self.indexOfSlide=function(slide){return slides.indexOf(slide)},$scope.next=function(){var newIndex=(currentIndex+1)%slides.length;return $scope.$currentTransition?void 0:self.select(slides[newIndex],"next")},$scope.prev=function(){var newIndex=0>currentIndex-1?slides.length-1:currentIndex-1;return $scope.$currentTransition?void 0:self.select(slides[newIndex],"prev")},$scope.isActive=function(slide){return self.currentSlide===slide},$scope.$watch("interval",restartTimer),$scope.$on("$destroy",resetTimer),$scope.play=function(){isPlaying||(isPlaying=!0,restartTimer())},$scope.pause=function(){$scope.noPause||(isPlaying=!1,resetTimer())},self.addSlide=function(slide,element){slide.$element=element,slides.push(slide),1===slides.length||slide.active?(self.select(slides[slides.length-1]),1===slides.length&&$scope.play()):slide.active=!1},self.removeSlide=function(slide){var index=slides.indexOf(slide);slides.splice(index,1),slides.length>0&&slide.active?index>=slides.length?self.select(slides[index-1]):self.select(slides[index]):currentIndex>index&&currentIndex--}}]).directive("attCarousel",[function(){return{restrict:"EA",transclude:!0,replace:!0,controller:"CarouselController",require:"carousel",templateUrl:"templates/carousel/carousel.html",scope:{interval:"=",noTransition:"=",noPause:"="}}}]).directive("attSlide",function(){return{require:"^attCarousel",restrict:"EA",transclude:!0,replace:!0,templateUrl:"templates/carousel/slide.html",scope:{active:"=?"},link:function(scope,element,attrs,carouselCtrl){carouselCtrl.addSlide(scope,element),scope.$on("$destroy",function(){carouselCtrl.removeSlide(scope)}),scope.$watch("active",function(active){active&&carouselCtrl.select(scope)})}}}),angular.module("connectedCarSDK.attCheckbox",[]).directive("attCheckbox",["$animate",function($animate){return{restrict:"AC",require:"?ngModel",replace:!0,link:function(scope,elm,attrs,ngModelCtrl){elm.wrap('<label class="att-checkbox-wrapper"></label>');var checkboxIcon=angular.element('<i class="att-checkbox-animation"></i>');ngModelCtrl.$modelValue?checkboxIcon.addClass("icon-checkbox-checked"):checkboxIcon.addClass("icon-checkbox-unchecked"),scope.$watch(function(){return ngModelCtrl.$modelValue},function(modelValue){modelValue?($animate.removeClass(checkboxIcon,"icon-checkbox-unchecked"),$animate.addClass(checkboxIcon,"icon-checkbox-checked")):($animate.removeClass(checkboxIcon,"icon-checkbox-checked"),$animate.addClass(checkboxIcon,"icon-checkbox-unchecked"))}),elm.after(checkboxIcon)}}}]).animation(".att-checkbox-animation",["$animateCss",function($animateCss){return{addClass:function(element,className){var animationRunner=$animateCss(element,{from:{background:"white"},to:{background:"transparent"},easing:"ease-out",duration:.35});animationRunner.start().done(function(){element[0].style.removeProperty("background")})}}}]),angular.module("connectedCarSDK.attContent",[]).directive("attContent",[function(){return{restrict:"E",transclude:!0,replace:!0,scope:!1,templateUrl:"templates/attContent.html",link:function(scope,element,attrs){attrs.$observe("hasHeader",function(value){scope.$eval(value)?element.addClass("has-header"):element.removeClass("has-header")}),attrs.$observe("hasFooter",function(value){scope.$eval(value)?element.addClass("has-footer"):element.removeClass("has-footer")});var backgroundHolder=angular.element('<div id="content-background-image"></div>');element.append(backgroundHolder),attrs.$observe("backgroundImg",function(value){backgroundHolder.css("background","url("+value+") no-repeat center center fixed"),backgroundHolder.css("-webkit-background-size","cover"),backgroundHolder.css("-moz-background-size","cover"),backgroundHolder.css("-o-background-size","cover"),backgroundHolder.css("background-size","cover")}),attrs.$observe("blurBackground",function(value){scope.$eval(value)?(backgroundHolder.css("-webkit-filter","blur(40px)"),backgroundHolder.css("filter","blur(40px)"),backgroundHolder.css("transition","filter 0.2s ease"),backgroundHolder.css("-webkit-transition","-webkit-filter 0.2s ease")):(backgroundHolder.css("-webkit-filter","none"),backgroundHolder.css("filter","none"))})}}}]),angular.module("connectedCarSDK.attDrawer",[]).directive("attDrawer",["$rootScope",function($rootScope){return{restrict:"E",templateUrl:"templates/attDrawer.html",transclude:!0,scope:{},link:function(scope){scope.showDrawer=!1,scope.closeDrawer=function(){scope.showDrawer=!1},$rootScope.$on("changeDrawer",function(event,args){scope.showDrawer=args[0]})}}}]),angular.module("connectedCarSDK.attDropdown",[]).directive("attDropdown",["$timeout",function($timeout){return{restrict:"E",replace:!0,templateUrl:function(tElement,tAttrs){return tAttrs.templateUrl||"templates/attDropdown.html"},require:"^ngModel",scope:{ngModel:"=",defaultOption:"@",items:"=",closeButton:"@"},link:function(scope){scope.show=!1,null!==scope.ngModel&&void 0!==scope.ngModel&&$timeout(function(){scope.defaultOption=scope.ngModel.text}),scope.selectItem=function(item){scope.ngModel=item,scope.defaultOption=scope.ngModel.text,scope.show=!1}}}}]),angular.module("connectedCarSDK.attFooter",[]).directive("attFooter",function(){return{restrict:"E",transclude:!0,replace:!0,templateUrl:"templates/attFooter.html",link:function(scope,element,attrs){attrs.$observe("verticalAlignment",function(value){value?scope.alignment=value:scope.alignment="center"}),attrs.$observe("isFixed",function(value){value="undefined"!=typeof value?value:"true","true"===value?scope.isFixed="footer-fixed":scope.isFixed=null})}}}),angular.module("connectedCarSDK.attHeader",[]).factory("$header",["$rootScope","$interval",function($rootScope,$interval){return{showBackButton:function(show,callback){var that=this;this.backButtonInterval=$interval(function(){$rootScope.$broadcast("showBackButton",[show,callback,function(){$interval.cancel(that.backButtonInterval)}])},100)}}}]).directive("attHeader",["$rootScope","attHeader.viewTypes","$animate",function($rootScope,viewTypes,$animate){return{restrict:"E",templateUrl:"templates/attHeader.html",replace:!0,scope:{appName:"=",appLogo:"@",viewName:"=",viewType:"=",backButtonCallback:"&"},link:function(scope,element){$animate.enter(element,element.parent());var tempViewTypeHolder,type=scope.viewType?scope.viewType:viewTypes.home;scope.backCallback=scope.backButtonCallback?scope.backButtonCallback:null,scope.drawerVisible=!1,scope.$watch("viewType",function(newValue){type=newValue}),scope.toggleDrawer=function(){scope.drawerVisible=!scope.drawerVisible,$rootScope.drawerVisible=scope.drawerVisible,scope.drawerVisible?(tempViewTypeHolder=angular.copy(type),type=viewTypes.home):type=tempViewTypeHolder,$rootScope.$broadcast("changeDrawer",[scope.drawerVisible])},$rootScope.$on("$routeChangeStart",function(){scope.drawerVisible&&scope.toggleDrawer()}),scope.isHomeScreen=function(){return type===viewTypes.home},scope.isPrimaryScreen=function(){return type===viewTypes.primary},scope.isSecondaryScreen=function(){return type===viewTypes.secondary},$rootScope.$on("showBackButton",function(event,args){scope.backButton=args[0],scope.backCallback=args[1],args[2]()})}}}]).constant("attHeader.viewTypes",{home:0,primary:1,secondary:2}).animation(".att-header-animation",["$animateCss",function($animateCss){return{enter:function(element,doneCallback){console.log("enter");var runner=$animateCss(element,{from:{"-webkit-transform":"translate3d(0, -4em, 0)","-ms-transform":"translate3d(0, -4em, 0)",transform:"translate3d(0, -4em, 0)",opacity:"0"},to:{"-webkit-transform":"translate3d(0, 0, 0)","-ms-transform":"translate3d(0, 0, 0)",transform:"translate3d(0, 0, 0)",opacity:"1"},duration:.5,easing:"cubic-bezier(0.010, 0.875, 0.490, 0.990)"});runner.start().then(function(){element.removeAttr("style"),doneCallback()})}}}]).animation(".att-header-app-name-animation",["$animateCss",function($animateCss){return{removeClass:function(element,className,doneCallback){var runner=$animateCss(element,{from:{"-webkit-transform":"translate3d(80%, 0, 0)","-ms-transform":"translate3d(80%, 0, 0)",transform:"translate3d(80%, 0, 0)",opacity:"0"},to:{"-webkit-transform":"translate3d(0, 0, 0)","-ms-transform":"translate3d(0, 0, 0)",transform:"translate3d(0, 0, 0)",opacity:"1"},duration:.4,easing:"cubic-bezier(0.010, 0.875, 0.490, 0.990)"});runner.start().then(function(){element.removeAttr("style"),doneCallback()})}}}]),angular.module("connectedCarSDK.attInput",[]).directive("attInput",["$timeout",function($timeout){return{restrict:"AC",require:"?ngModel",replace:!0,link:function(scope,elm,attrs,ngModelCtrl){elm.wrap('<div class="att-input-field"></div>'),attrs.iconClass&&elm.parent().prepend('<i class="'+attrs.iconClass+'"></i>');var aElement;aElement=angular.element('<i class="icon-close"></i>');var added=!1,remove=function(e){added&&(aElement.remove(),added=!1)},add=function(e){(!added&&elm.val().length>0||!ngModelCtrl.$valid)&&(elm.after(aElement),aElement.bind("mousedown",click),added=!0),added&&0===elm.val().length&&ngModelCtrl.$valid&&remove()},click=function(e){e.preventDefault(),scope.$apply(function(){ngModelCtrl.$setViewValue(""),ngModelCtrl.$render()}),elm[0].focus()};elm.bind("focus input",add),elm.bind("blur",remove)}}}]),angular.module("connectedCarSDK.attListView",[]).directive("attListView",function(){return{restrict:"E",templateUrl:"templates/attListView.html",replace:!0,scope:{items:"=",title:"=",multiSelect:"="},link:function(scope){scope.onItemClick=function(item){console.log("Selected item ",item),item.selected?item.selected=!1:scope.items&&scope.items.forEach(function(i){i===item?i.selected=!0:scope.multiSelect!==!0&&(i.selected=!1)})}}}}),angular.module("connectedCarSDK.attLoader",[]).factory("$loader",["$rootScope","$compile","$document","$timeout",function($rootScope,$compile,$document,$timeout){var getLoaderReference=function(parentElementId){var parent;parent=parentElementId&&document.getElementById(parentElementId)?document.getElementById(parentElementId):$document.find("body")[0];var loaderEl=parent.getElementsByClassName("att-loader")[0];if(loaderEl)return loaderEl;var angularDomEl=angular.element("<att-loader></att-loader>"),loaderScope=$rootScope.$new(!1);return loaderEl=$compile(angularDomEl)(loaderScope),angular.element(parent).append(loaderEl),loaderEl};return{show:function(parentElementId){var loader=getLoaderReference(parentElementId);loader&&$timeout(function(){var scope=angular.element(loader).scope();scope.forceshow=!0},0)},hide:function(){var loader=getLoaderReference();loader&&$timeout(function(){var scope=angular.element(loader).scope();scope.forceshow=!1},0)}}}]).directive("attLoader",["$http",function($http){return{restrict:"E",replace:!0,templateUrl:"templates/attLoader.html",link:function(scope){scope.isLoading=function(){return $http.pendingRequests.length>0||scope.forceshow},scope.isVisible=!1,scope.$watch(scope.isLoading,function(v){v?scope.isVisible=!0:scope.isVisible=!1})}}}]),function(angular,drive){"use strict";angular.module("connectedCarSDK.attMediaPlayer",[]).constant("mediaPlayerConfig",{type:"info",max:100,min:0,playerCommands:{play:"play",stop:"stop",pause:"pause",seek:"seek"}}).factory("$mediaPlayer",["$timeout","$log","mediaPlayerConfig",function($timeout,$log,mediaPlayerConfig){function activate(){function updatePositionIfPlayerIsActive(player){!player||"Playing"!==player.status&&"Paused"!==player.status||getCurrentMedia(),player&&player.position&&updateAudioPosition(player.position)}subscribeToPlayerChanges(),subscribeToMetaData(),currentPlayerStatus(updatePositionIfPlayerIsActive)}function setPlaylist(plist){playlist=plist}function isPlaylistAvailable(){return playlist&&playlist.length>0}function play(){function callback(){$timeout(function(){setPlayerAction(playerCommands.play,null,getCurrentMedia)},1e3)}if(!isPlaylistAvailable())return void $log.warn("Playlist is not available, play action ignored");if(null==nowPlaying.trackIndex){nowPlaying.trackIndex=0;var songPath=playlist[nowPlaying.trackIndex].src;setCurrentMedia(songPath,callback),setPlayerAction(playerCommands.play,null,getCurrentMedia)}else setPlayerAction(playerCommands.play,null,getCurrentMedia)}function pause(callback){setPlayerAction(playerCommands.pause,null,callback)}function stop(){setPlayerAction(playerCommands.stop)}function next(){return isPlaylistAvailable()?(calculateNextSongIndex(!1),void skipTrack()):void $log.warn("Playlist is not available, next action ignored")}function previous(){return isPlaylistAvailable()?(calculateNextSongIndex(!0),void skipTrack()):void $log.warn("Playlist is not available, previous action ignored")}function seekToTime(time,callback){setPlayerAction(playerCommands.seek,time,callback)}function skipTime(time){angular.isNumber(time)||$log.warn("Provided time is not a number - skip time action ignored");var seekTime=nowPlaying.progress.val+time;0>seekTime?seekTime=0:seekTime>nowPlaying.progress.max&&(seekTime=nowPlaying.progress.max),setPlayerAction(playerCommands.seek,seekTime)}function skipTrack(){currentPlayerStatus(function(player){var songPath=playlist[nowPlaying.trackIndex].src;setCurrentMedia(songPath),nowPlaying.progress.val=0,nowPlaying.progress.elapsedTime=formatTime(0),console.info("skipTrack status:",player),!player||"Playing"!==player.status&&"Playing"!==player.status?$timeout(function(){getCurrentMedia()},500):play()})}function calculateNextSongIndex(previousSong){if(playlist&&!(playlist.length<=1))if(playerOptions.shuffle){for(var randomIndex=nowPlaying.trackIndex;randomIndex===nowPlaying.trackIndex;)randomIndex=Math.floor(Math.random()*playlist.length+0);nowPlaying.trackIndex=randomIndex}else previousSong?nowPlaying.trackIndex=null===nowPlaying.trackIndex||nowPlaying.trackIndex-1<0?playlist.length-1:nowPlaying.trackIndex-1:nowPlaying.trackIndex=null===nowPlaying.trackIndex||nowPlaying.trackIndex+1>=playlist.length?0:nowPlaying.trackIndex+1}function updateProgress(){nowPlaying.progress.max=nowPlaying.track.duration/1e3}function setPlayerAction(action,position,callback){function onSuccessSetAction(res){$log.info(" drive.media.player.set "+action+" success: ",res),callback&&$timeout(function(){callback()},500)}function onErrorSetAction(res){$log.info(" drive.media.player.set "+action+" error: ",res)}var player={action:action};action===playerCommands.seek&&(player.position=position),$log.info("player settings: ",player),drive.media.player.set(player).then(onSuccessSetAction,onErrorSetAction)}function setCurrentMedia(songPath,callback){function onSuccessSetCurrentMedia(res){$log.warn(" drive.media.currentMedia.set success: ",res),callback&&callback()}function onErrorSetCurrentMedia(res){$log.warn(" drive.media.currentMedia.set error: ",res)}var currentMedia={source:songPath};drive.media.currentMedia.set(currentMedia).then(onSuccessSetCurrentMedia,onErrorSetCurrentMedia)}function getCurrentMedia(){function logMedia(currentMedia){$log.warn("getCurrentMedia",currentMedia),$timeout(function(){setNowPlayingAttributes(currentMedia),updateProgress()},0)}function logError(error){$log.warn("getCurrentMedia",error)}drive.media.currentMedia.get().then(logMedia,logError)}function subscribeToPlayerChanges(){function onPlayerChange(player){player&&(null!=player.position&&$timeout(function(){updateAudioPosition(player.position)}),null!=player.status&&onAudioState(player.status))}drive.media.player.subscribe(onPlayerChange)}function subscribeToMetaData(){function onMetadata(data){$log.info("onMetadata",data),data&&"object"==typeof data&&data.hasOwnProperty("duration")&&(setNowPlayingAttributes(data),updateProgress())}drive.media.currentMedia.subscribe(onMetadata)}function currentPlayerStatus(callback){function resolve(res){$log.warn("currentPlayerStatus success",res),callback&&callback(res)}function reject(error){$log.error("currentPlayerStatus error",error)}drive.media.player.get().then(resolve,reject)}function setNowPlayingAttributes(currentMedia){nowPlaying.track=currentMedia;var providedAttributes=nowPlaying&&angular.isDefined(nowPlaying.trackIndex)&&playlist&&playlist[nowPlaying.trackIndex];if(providedAttributes){var keys=Object.keys(providedAttributes);keys.forEach(function(attributeName){nowPlaying.track[attributeName]=providedAttributes[attributeName]||nowPlaying.track[attributeName]})}}function updateAudioPosition(position){if(!nowPlaying.progress.timeSettingInProgress){nowPlaying.progress.val=position,nowPlaying.progress.elapsedTime=formatTime(position);var remainingTime=nowPlaying.progress.max-nowPlaying.progress.val;0>remainingTime&&(remainingTime=0),nowPlaying.progress.remainingTime="-"+formatTime(remainingTime)}}function formatTime(seconds){var min,sec;return min=parseInt(seconds/60),sec=parseInt(seconds%60),1===min.toString().length&&(min="0"+min),1===sec.toString().length&&(sec="0"+sec),min+":"+sec}function onAudioState(playerStatus){if(nowPlaying.status=playerStatus,"Done"===playerStatus){if(playlist&&playlist.length&&playlist.length-1===nowPlaying.trackIndex&&!playerOptions.shuffle&&!playerOptions.repeat)return void stop();next(),$timeout(function(){play()},500)}}function toggleRepeat(){playerOptions.repeat=!playerOptions.repeat}function toggleShuffle(){playerOptions.shuffle=!playerOptions.shuffle}function getPlayerOption(){return playerOptions}function getNowPlaying(){return nowPlaying}var playlist,playerCommands=mediaPlayerConfig.playerCommands,nowPlaying={track:null,progress:{min:0,max:0,val:0,elapsedTime:0,remainingTime:0,timeSettingInProgress:!1},trackIndex:null,status:null},playerOptions={repeat:!1,shuffle:!1};return activate(),{play:play,pause:pause,seekToTime:seekToTime,skipTime:skipTime,stop:stop,next:next,previous:previous,setPlaylist:setPlaylist,toggleRepeat:toggleRepeat,toggleShuffle:toggleShuffle,getPlayerOption:getPlayerOption,getNowPlaying:getNowPlaying,getStatus:currentPlayerStatus,getCurrentMedia:getCurrentMedia}}]).directive("attMediaPlayer",["$mediaPlayer","$timeout","$log",function($mediaPlayer,$timeout,$log){return{restrict:"E",replace:!0,templateUrl:function(tElement,tAttrs){return void 0===tAttrs.templateUrl?"templates/attMediaPlayer.html":tAttrs.templateUrl},scope:{playlist:"=",autoplay:"="},link:function(scope){function activate(){$mediaPlayer.setPlaylist(scope.playlist),$mediaPlayer.getStatus(function(current){current&&"Playing"===current.status&&(scope.isPlayerPaused=!1)}),scope.autoplay&&scope.play()}scope.isPlayerPaused=!0,scope.play=function(){$mediaPlayer.play(),scope.isPlayerPaused=!1},scope.pause=function(){$mediaPlayer.pause(function(){angular.noop()}),scope.isPlayerPaused=!0},scope.stop=function(){$mediaPlayer.stop()},scope.next=function(){$mediaPlayer.next()},scope.previous=function(){$mediaPlayer.previous()},scope.skipTime=function(time){$mediaPlayer.skipTime(time)},scope.toggleRepeat=function(){$mediaPlayer.toggleRepeat()},scope.toggleShuffle=function(){$mediaPlayer.toggleShuffle()},scope.playerOption=$mediaPlayer.getPlayerOption(),scope.nowPlaying=$mediaPlayer.getNowPlaying(),scope.getCurrentMedia=$mediaPlayer.getCurrentMedia,scope.albumArtAction=function(){scope.$emit("albumArtActivated")},scope.$watch("nowPlaying",function(nowPlaying){scope.currentTrackIndex=nowPlaying.trackIndex,nowPlaying.progress.val>=Math.floor(nowPlaying.progress.max)&&$timeout(function(){angular.noop()},2e3)},!0),scope.$watch("nowPlaying.status",function(status){scope.isPlayerPaused="Playing"===status?!1:!0}),scope.$watch("nowPlaying.track.art",function(trackArt){scope.$emit("trackArtChanged",trackArt)}),scope.$on("sliderMoving",function(event,data){"time"===data&&(scope.nowPlaying.progress.timeSettingInProgress=!0)}),scope.$on("sliderMoved",function(event,data){if("time"===data){var timeToSeek=scope.nowPlaying&&scope.nowPlaying.progress&&scope.nowPlaying.progress.val;timeToSeek&&angular.isNumber(+timeToSeek)&&$mediaPlayer.seekToTime(timeToSeek,function(){scope.nowPlaying.progress.timeSettingInProgress=!1})}}),scope.$watch("playlist",function(){activate()}),scope.getNextTrack=function(){if(!angular.isNumber(scope.currentTrackIndex)||scope.playerOption.shuffle||!scope.playlist)return null;var next=scope.currentTrackIndex+1;return next>scope.playlist.length-1&&(next=0),scope.playlist[next]}}}}])}(window.angular,window.drive),angular.module("connectedCarSDK.attMenu",[]).directive("attMenu",function($timeout,$rootScope){return{templateUrl:"templates/attMenu.html",restrict:"E",replace:!0,scope:{items:"=",title:"="},link:function(scope,element){scope.activeTemp=!1,scope.onItemClick=function(item){scope.items&&scope.items.forEach(function(i){i===item?i.selected=!0:i.selected=!1})},$rootScope.$on("setMenuItem",function(event,args){scope.onItemClick(args[0])}),$rootScope.$on("changeDrawer",function(){$timeout(function(){scope.activeTemp=!0,angular.element(element)[0].scrollTop=0})})}}}),angular.module("connectedCarSDK.attModal",["connectedCarSDK.transition"]).factory("$$stackedMap",function(){return{createNew:function(){var stack=[];return{add:function(key,value){stack.push({key:key,value:value})},get:function(key){for(var i=0;i<stack.length;i++)if(key===stack[i].key)return stack[i]},keys:function(){for(var keys=[],i=0;i<stack.length;i++)keys.push(stack[i].key);return keys},top:function(){return stack[stack.length-1]},remove:function(key){for(var idx=-1,i=0;i<stack.length;i++)if(key===stack[i].key){idx=i;break}return stack.splice(idx,1)[0]},removeTop:function(){return stack.splice(stack.length-1,1)[0]},length:function(){return stack.length}}}}}).directive("modalBackdrop",["$timeout",function($timeout){return{restrict:"EA",replace:!0,templateUrl:"templates/modal/backdrop.html",link:function(scope,element,attrs){scope.backdropClass=attrs.backdropClass||"",scope.animate=!1,$timeout(function(){scope.animate=!0})}}}]).directive("modalWindow",["$modalStack","$timeout",function($modalStack,$timeout){return{restrict:"EA",scope:{index:"@",animate:"="},replace:!0,transclude:!0,templateUrl:function(tElement,tAttrs){return tAttrs.templateUrl||"templates/modal/window.html"},link:function(scope,element,attrs){element.addClass(attrs.windowClass||""),scope.size=attrs.size,$timeout(function(){scope.animate=!0,element[0].querySelectorAll("[autofocus]").length||element[0].focus()}),scope.close=function(evt){var modal=$modalStack.getTop();modal&&modal.value.backdrop&&"static"!==modal.value.backdrop&&evt.target===evt.currentTarget&&(evt.preventDefault(),evt.stopPropagation(),$modalStack.dismiss(modal.key,"backdrop click"))}}}}]).directive("modalTransclude",function(){return{link:function($scope,$element,$attrs,controller,$transclude){$transclude($scope.$parent,function(clone){$element.empty(),$element.append(clone)})}}}).factory("$modalStack",["$transition","$timeout","$document","$compile","$rootScope","$$stackedMap",function($transition,$timeout,$document,$compile,$rootScope,$$stackedMap){
function backdropIndex(){for(var topBackdropIndex=-1,opened=openedWindows.keys(),i=0;i<opened.length;i++)openedWindows.get(opened[i]).value.backdrop&&(topBackdropIndex=i);return topBackdropIndex}function removeModalWindow(modalInstance){var body=$document.find("body").eq(0),modalWindow=openedWindows.get(modalInstance).value;openedWindows.remove(modalInstance),removeAfterAnimate(modalWindow.modalDomEl,modalWindow.modalScope,300,function(){modalWindow.modalScope.$destroy(),body.toggleClass(OPENED_MODAL_CLASS,openedWindows.length()>0),checkRemoveBackdrop()})}function checkRemoveBackdrop(){if(backdropDomEl&&-1===backdropIndex()){var backdropScopeRef=backdropScope;removeAfterAnimate(backdropDomEl,backdropScope,150,function(){backdropScopeRef.$destroy(),backdropScopeRef=null}),backdropDomEl=void 0,backdropScope=void 0}}function removeAfterAnimate(domEl,scope,emulateTime,done){function afterAnimating(){afterAnimating.done||(afterAnimating.done=!0,domEl.remove(),done&&done())}scope.animate=!1;var transitionEndEventName=$transition.transitionEndEventName;if(transitionEndEventName){var timeout=$timeout(afterAnimating,emulateTime);domEl.bind(transitionEndEventName,function(){$timeout.cancel(timeout),afterAnimating(),scope.$apply()})}else $timeout(afterAnimating)}var backdropDomEl,backdropScope,OPENED_MODAL_CLASS="modal-open",openedWindows=$$stackedMap.createNew(),$modalStack={};return $rootScope.$watch(backdropIndex,function(newBackdropIndex){backdropScope&&(backdropScope.index=newBackdropIndex)}),$document.bind("keydown",function(evt){var modal;27===evt.which&&(modal=openedWindows.top(),modal&&modal.value.keyboard&&(evt.preventDefault(),$rootScope.$apply(function(){$modalStack.dismiss(modal.key,"escape key press")})))}),$modalStack.open=function(modalInstance,modal){openedWindows.add(modalInstance,{deferred:modal.deferred,modalScope:modal.scope,backdrop:modal.backdrop,keyboard:modal.keyboard});var body=$document.find("body").eq(0),currBackdropIndex=backdropIndex();if(currBackdropIndex>=0&&!backdropDomEl){backdropScope=$rootScope.$new(!0),backdropScope.index=currBackdropIndex;var angularBackgroundDomEl=angular.element("<div modal-backdrop></div>");angularBackgroundDomEl.attr("backdrop-class",modal.backdropClass),backdropDomEl=$compile(angularBackgroundDomEl)(backdropScope),body.append(backdropDomEl)}var angularDomEl=angular.element("<div modal-window></div>");angularDomEl.attr({"template-url":modal.windowTemplateUrl,"window-class":modal.windowClass,size:modal.size,index:openedWindows.length()-1,animate:"animate"}).html(modal.content);var modalDomEl=$compile(angularDomEl)(modal.scope);openedWindows.top().value.modalDomEl=modalDomEl,body.append(modalDomEl),body.addClass(OPENED_MODAL_CLASS)},$modalStack.close=function(modalInstance,result){var modalWindow=openedWindows.get(modalInstance);modalWindow&&(modalWindow.value.deferred.resolve(result),removeModalWindow(modalInstance))},$modalStack.dismiss=function(modalInstance,reason){var modalWindow=openedWindows.get(modalInstance);modalWindow&&(modalWindow.value.deferred.reject(reason),removeModalWindow(modalInstance))},$modalStack.dismissAll=function(reason){for(var topModal=this.getTop();topModal;)this.dismiss(topModal.key,reason),topModal=this.getTop()},$modalStack.getTop=function(){return openedWindows.top()},$modalStack}]).provider("$modal",function(){var $modalProvider={options:{backdrop:!1,keyboard:!0},$get:["$injector","$rootScope","$q","$http","$templateCache","$controller","$modalStack",function($injector,$rootScope,$q,$http,$templateCache,$controller,$modalStack){function getTemplatePromise(options){return options.template?$q.when(options.template):$http.get(angular.isFunction(options.templateUrl)?options.templateUrl():options.templateUrl,{cache:$templateCache}).then(function(result){return result.data})}function getResolvePromises(resolves){var promisesArr=[];return angular.forEach(resolves,function(value){(angular.isFunction(value)||angular.isArray(value))&&promisesArr.push($q.when($injector.invoke(value)))}),promisesArr}var $modal={};return $modal.open=function(modalOptions){var modalResultDeferred=$q.defer(),modalOpenedDeferred=$q.defer(),modalInstance={result:modalResultDeferred.promise,opened:modalOpenedDeferred.promise,close:function(result){$modalStack.close(modalInstance,result)},dismiss:function(reason){$modalStack.dismiss(modalInstance,reason)}};if(modalOptions=angular.extend({},$modalProvider.options,modalOptions),modalOptions.resolve=modalOptions.resolve||{},!modalOptions.template&&!modalOptions.templateUrl)throw new Error("One of template or templateUrl options is required.");var templateAndResolvePromise=$q.all([getTemplatePromise(modalOptions)].concat(getResolvePromises(modalOptions.resolve)));return templateAndResolvePromise.then(function(tplAndVars){var modalScope=(modalOptions.scope||$rootScope).$new();modalScope.$close=modalInstance.close,modalScope.$dismiss=modalInstance.dismiss;var ctrlInstance,ctrlLocals={},resolveIter=1;modalOptions.controller&&(ctrlLocals.$scope=modalScope,ctrlLocals.$modalInstance=modalInstance,angular.forEach(modalOptions.resolve,function(value,key){ctrlLocals[key]=tplAndVars[resolveIter++]}),ctrlInstance=$controller(modalOptions.controller,ctrlLocals),modalOptions.controllerAs&&(modalScope[modalOptions.controllerAs]=ctrlInstance)),$modalStack.open(modalInstance,{scope:modalScope,deferred:modalResultDeferred,content:tplAndVars[0],backdrop:modalOptions.backdrop,keyboard:modalOptions.keyboard,backdropClass:modalOptions.backdropClass,windowClass:modalOptions.windowClass,windowTemplateUrl:modalOptions.windowTemplateUrl,size:modalOptions.size})},function(reason){modalResultDeferred.reject(reason)}),templateAndResolvePromise.then(function(){modalOpenedDeferred.resolve(!0)},function(){modalOpenedDeferred.reject(!1)}),modalInstance},$modal}]};return $modalProvider}),angular.module("connectedCarSDK.attPinPad",[]).factory("$pinPad",["$rootScope","$compile","$document",function($rootScope,$compile,$document){return{show:function(options){var pinPadDomEl=$document.find("body").find("att-pin-pad");pinPadDomEl&&pinPadDomEl.remove();var angularDomEl=angular.element('<att-pin-pad ng-model="ngModel" on-confirm="onConfirm(ngModel)"></att-pin-pad>');angularDomEl.attr({"num-digits":options.numDigits}),angularDomEl.attr({"template-url":options.templateUrl});var pinPadScope=$rootScope.$new(!1);pinPadScope.ngModel=options.ngModel||"",pinPadScope.onConfirm=options.onConfirm?options.onConfirm:null,pinPadDomEl=$compile(angularDomEl)(pinPadScope),$document.find("body").eq(0).append(pinPadDomEl)},close:function(){var pinPadDomEl=$document.find("body").find("att-pin-pad");pinPadDomEl&&pinPadDomEl.remove()}}}]).directive("attPinPad",function(){return{templateUrl:function(tElement,tAttrs){return tAttrs.templateUrl||"templates/attPinPad.html"},restrict:"EA",scope:{numDigits:"@",ngModel:"=",onConfirm:"&"},link:function(scope){scope.ngModel||(scope.ngModel="");var numberOfDigits=4;scope.numDigits&&(numberOfDigits=scope.numDigits),scope.backspace=function(){scope.ngModel&&scope.ngModel.length>0&&(scope.ngModel=scope.ngModel.slice(0,-1))},scope.appendToPin=function(val){val>=0&&scope.ngModel.length<numberOfDigits&&(scope.ngModel+=val.toString())},scope.isDisabled=function(){return scope.ngModel.length<numberOfDigits?!0:!1}}}}),function(angular){"use strict";angular.module("connectedCarSDK.attProgressBar",[]).constant("progressConfig",{animate:!0,max:100,min:0}).controller("ProgressController",["$scope","$attrs","$parse","progressConfig",function($scope,$attrs,$parse,progressConfig){var self=this,animate=angular.isDefined($attrs.animate)?$scope.$parent.$eval($attrs.animate):progressConfig.animate;this.bars=[],$scope.max=angular.isDefined($attrs.max)?$scope.$parent.$eval($attrs.max):progressConfig.max,$scope.min=angular.isDefined($attrs.min)?$scope.$parent.$eval($attrs.min):progressConfig.min,$scope.textLeft=angular.isDefined($attrs.textLeft)?$scope.$parent.$eval($attrs.textLeft):progressConfig.textLeft,$scope.textRight=angular.isDefined($attrs.textRight)?$scope.$parent.$eval($attrs.textRight):progressConfig.textRight,$attrs.$observe("max",function(value){$scope.max=$parse(value)($scope)}),$attrs.$observe("min",function(value){$scope.min=$parse(value)($scope)}),$attrs.$observe("textLeft",function(value){$scope.textLeft=$parse(value)($scope)}),$attrs.$observe("textRight",function(value){$scope.textRight=$parse(value)($scope)}),this.addBar=function(bar,element){animate||element.css({transition:"none"}),this.bars.push(bar),bar.$watch("value",function(value){value>$scope.max&&(value=$scope.max),bar.percent=+(100*value/$scope.max).toFixed(2)}),bar.$on("$destroy",function(){element=null,self.removeBar(bar)})},this.removeBar=function(bar){this.bars.splice(this.bars.indexOf(bar),1)}}]).directive("attProgressBar",function(){return{restrict:"EA",replace:!0,controller:"ProgressController",scope:{value:"=",type:"="},templateUrl:"templates/attProgressBar.html",link:function(scope,element,attrs,progressCtrl){attrs.max&&scope.value>scope.$parent.$eval(attrs.max)&&(scope.value=attrs.max),progressCtrl.addBar(scope,angular.element(element.children()[0]))}}})}(window.angular),angular.module("connectedCarSDK.attRadio",[]).directive("attRadio",["$timeout",function($timeout){return{restrict:"AC",require:"?ngModel",replace:!0,link:function(scope,elm,attrs,ngModelCtrl){elm.wrap('<label class="att-radio-wrapper"></label>');var checkboxIcon=angular.element("<i></i>");ngModelCtrl.$modelValue?checkboxIcon.addClass("icon-radio-checked"):checkboxIcon.addClass("icon-radio-unchecked"),scope.$watch(function(){return ngModelCtrl.$modelValue},function(modelValue){modelValue===attrs.value?(checkboxIcon.removeClass("icon-radio-unchecked"),checkboxIcon.addClass("icon-radio-checked")):(checkboxIcon.removeClass("icon-radio-checked"),checkboxIcon.addClass("icon-radio-unchecked"))}),elm.after(checkboxIcon)}}}]),angular.module("connectedCarSDK.attSimError",[]).directive("attSimError",[function(){return{restrict:"E",replace:!0,templateUrl:"templates/attSimError.html",link:function(scope,iElm,iAttrs,controller){console.log("Params: ",scope,iElm,iAttrs,controller)}}}]),angular.module("connectedCarSDK.attSlider",[]).directive("attSlider",["$timeout",function($timeout){return{restrict:"EA",templateUrl:"templates/attSlider.html",scope:{type:"@",ngModel:"=",min:"@",max:"@",textLeft:"@",textRight:"@",parentControl:"@"},link:function(scope,element){scope.min=scope.min||0,scope.max=scope.max||100,scope.ngModel=scope.ngModel||0;var input=element.find("input");scope.sliderMovingTime=200,scope.sliderMoved=!1,scope.sliderMoved=function(){scope.$emit("sliderMoved",scope.parentControl)},scope.sliderMoving=function(){scope.$emit("sliderMoving",scope.parentControl),console.log(scope.ngModel)};var slider=element.find("input");slider.bind("touchstart",function(){scope.$emit("sliderMoving",scope.parentControl),this.focus()}),slider.bind("touchend",function(){scope.$emit("sliderMoved",scope.parentControl),this.focus()}),scope.sliderClick=function(event){if(input&&!(input.length<=0)){var positionIndicatorWidth=20,position=(event.clientX-positionIndicatorWidth)/input[0].clientWidth*100;scope.$emit("sliderMoving",scope.parentControl);var positionTime=position/100*scope.max;scope.ngModel=0>positionTime?0:Math.floor(positionTime),$timeout(function(){scope.$emit("sliderMoved",scope.parentControl)},0)}}}}}]),angular.module("connectedCarSDK.attTab",["connectedCarSDK.attTabset"]).directive("attTab",["$parse",function($parse){return{require:"^attTabset",restrict:"EA",replace:!0,templateUrl:"templates/tabs/attTab.html",transclude:!0,scope:{active:"=?",heading:"@",onSelect:"&select",onDeselect:"&deselect",tabIcon:"@"},controller:function(){},compile:function(elm,attrs,transclude){return function(scope,elm,attrs,tabsetCtrl){scope.$watch("active",function(active){active&&tabsetCtrl.select(scope)}),scope.disabled=!1,attrs.disabled&&scope.$parent.$watch($parse(attrs.disabled),function(value){scope.disabled=!!value}),scope.select=function(){scope.disabled||(scope.active=!0)},tabsetCtrl.addTab(scope),scope.$on("$destroy",function(){tabsetCtrl.removeTab(scope)}),scope.$transcludeFn=transclude}}}}]).directive("tabHeadingTransclude",[function(){return{restrict:"A",require:"^attTab",link:function(scope,elm){scope.$watch("headingElement",function(heading){heading&&(elm.html(""),elm.append(heading))})}}}]).directive("tabContentTransclude",function(){function isTabHeading(node){return node.tagName&&(node.hasAttribute("tab-heading")||node.hasAttribute("data-tab-heading")||"tab-heading"===node.tagName.toLowerCase()||"data-tab-heading"===node.tagName.toLowerCase())}return{restrict:"A",require:"^attTabset",link:function(scope,elm,attrs){var tab=scope.$eval(attrs.tabContentTransclude);tab.$transcludeFn(tab.$parent,function(contents){angular.forEach(contents,function(node){isTabHeading(node)?tab.headingElement=node:elm.append(node)})})}}}),angular.module("connectedCarSDK.attTabset",[]).controller("TabsetController",["$scope",function($scope){var ctrl=this,tabs=ctrl.tabs=$scope.tabs=[];ctrl.select=function(selectedTab){angular.forEach(tabs,function(tab){tab.active&&tab!==selectedTab&&(tab.active=!1,tab.onDeselect())}),selectedTab.active=!0,selectedTab.onSelect()},ctrl.addTab=function(tab){tabs.push(tab),1===tabs.length?tab.active=!0:tab.active&&ctrl.select(tab)},ctrl.removeTab=function(tab){var index=tabs.indexOf(tab);if(tab.active&&tabs.length>1){var newActiveIndex=index===tabs.length-1?index-1:index+1;ctrl.select(tabs[newActiveIndex])}tabs.splice(index,1)}}]).directive("attTabset",function(){return{restrict:"EA",transclude:!0,replace:!0,scope:{type:"@"},controller:"TabsetController",templateUrl:"templates/tabs/attTabset.html",link:function(scope,element,attrs){scope.vertical=angular.isDefined(attrs.vertical)?scope.$parent.$eval(attrs.vertical):!1,scope.justified=angular.isDefined(attrs.justified)?scope.$parent.$eval(attrs.justified):!1,scope.topPosition=angular.isDefined(attrs.topPosition)?scope.$parent.$eval(attrs.topPosition):!1}}}),angular.module("connectedCarSDK.attToggleSwitch",[]).directive("attToggleSwitch",["$parse",function($parse){return{restrict:"AC",scope:!1,require:"ngModel",link:function(scope,element,attrs,ngModel){function toggle(){ngModel.$modelValue?parent.addClass("toggle-switch-on"):parent.removeClass("toggle-switch-on")}function setDisabledStyles(isDisabled){isDisabled?parent.addClass("toggle-switch-disabled"):parent.removeClass("toggle-switch-disabled")}var hideLabels=$parse(attrs.hideLabels)(scope),onStateLabel=hideLabels?"":attrs.onLabel||"ON",offStateLabel=hideLabels?"":attrs.offLabel||"OFF",baseElement=['<label class="att-toggle-switch">','<span class="on-state">'+onStateLabel+"</span>",'<span class="off-state">'+offStateLabel+"</span>","</label>"];element.wrap(baseElement.join("")),element.after('<div id="toggle-switch-circle"></div>');var parent=element.parent();parent.bind("click",function(){attrs.disabled||toggle()}),scope.$watch(attrs.ngModel,function(newValue){toggle()}),setDisabledStyles(attrs.disabled),attrs.ngDisabled&&scope.$watch(attrs.ngDisabled,setDisabledStyles)}}}]),angular.module("connectedCarSDK.attVehicleInMotion",[]).directive("attVehicleInMotion",[function(){return{restrict:"E",replace:"true",templateUrl:"templates/attVehicleInMotion.html",link:function(scope,iElm,iAttrs,controller){console.log("Properties: ",scope,iElm,iAttrs,controller)}}}]),angular.module("connectedCarSDK.tpls",["templates/attAlert.html","templates/attBadge.html","templates/attContent.html","templates/attDrawer.html","templates/attDropdown.html","templates/attFooter.html","templates/attHeader.html","templates/attListView.html","templates/attLoader.html","templates/attMediaPlayer.html","templates/attMenu.html","templates/attPinPad.html","templates/attProgressBar.html","templates/attSimError.html","templates/attSlider.html","templates/attVehicleInMotion.html","templates/carousel/carousel.html","templates/carousel/slide.html","templates/modal/backdrop.html","templates/modal/window.html","templates/tabs/attTab.html","templates/tabs/attTabset.html"]),angular.module("templates/attAlert.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attAlert.html",'<div ng-show="alert.isActive" class="att-alert alert-animation" ng-class="alert.type && \'alert-\' + alert.type" ng-click="close()">\n    <div class="content">\n        <h1 class="alert-heading" ng-bind="alert.title"></h1>\n        <!--<p class="alert-text" ng-bind="alert.text"></p>-->\n        <p class="alert-text" ng-transclude></p>\n    </div>\n    <span class="alert-icon {{type}}" ng-show="alert.showIcon && !alert.showConfirmationBtn">\n        <i class="fa" ng-class="type==\'success\' ? \'fa-check-circle\' : type==\'danger\' ? \'fa-warning\' : \'fa-info-circle\'"></i>\n    </span>\n    <div class="alert-button">\n        <button class="btn btn-outlined btn-default" ng-show="alert.showConfirmationBtn" ng-click="btnClick()">{{alert.buttonText}}</button>\n    </div>\n\n</div>\n')}]),angular.module("templates/attBadge.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attBadge.html",'<span class="att-badge badge-{{badgeType}}">\n    {{value}}\n</span>')}]),angular.module("templates/attContent.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attContent.html",'<div class="att-content-container">\n  <div class="att-content att-grid" ng-transclude></div>\n</div>\n')}]),angular.module("templates/attDrawer.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attDrawer.html",'<div class="att-drawer" ng-show="showDrawer" ng-transclude></div>\n\n\n')}]),angular.module("templates/attDropdown.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attDropdown.html",'<div class="att-dropdown">\n    <div ng-click="show=!show">\n        <a class="selected" ng-bind="defaultOption"></a>\n        <span class="icon"><i class="fa fa-caret-down"></i></span>\n    </div>\n    <div class="screen" ng-show="show">\n        <button ng-show="closeButton" type="button" class="btn btn-circ small btn-close-list" ng-click="show=false"><span class="icon-close"></span></button>\n        <ul class="list">\n            <li ng-repeat="item in items" ng-click="selectItem(item)">{{item.text}}</li>\n\n        </ul>\n    </div>\n</div>\n')}]),angular.module("templates/attFooter.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attFooter.html",'<div class="att-footer att-grid">\n  <div class="row footer-content" ng-class="alignment && \'row-\' + alignment" ng-transclude></div>\n</div>\n')}]),angular.module("templates/attHeader.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attHeader.html",'<div class="att-header att-header-animation">\n    <div id="back-icon" ng-click="backCallback()" ng-show="isSecondaryScreen()">\n        <i class="icon-back"></i>\n    </div>\n\n    <div id="app-brand" class="att-header-app-name-animation" ng-show="isHomeScreen()">        \n        <img ng-src="{{appLogo}}"  alt="" id="app-icon">\n        <span id="app-name">{{appName}}</span>\n    </div>\n    <div id="current-view" ng-class="{\'centered\': isSecondaryScreen()}" ng-show="isPrimaryScreen() || isSecondaryScreen()">\n        \n        <span id="view-name">{{viewName}}</span>\n    </div>\n    <div id="alignment-helper" ng-show="isPrimaryScreen()"></div>\n    <div id="drawer-button" ng-click="toggleDrawer()">\n        <i class="icon-menu"></i>\n    </div>\n\n</div>')}]),angular.module("templates/attListView.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attListView.html",'<div class="att-list-view">\n    <h3 class="active-screen" ng-bind="title"></h3>\n    <ul class="list">\n        <li ng-repeat="item in items"\n            ng-class="{active: item.selected}"\n            ng-click="onItemClick(item)">\n            {{item.text}}\n            <span ng-bind="item.desc"></span>\n        </li>\n    </ul>\n</div>')}]),angular.module("templates/attLoader.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attLoader.html",'<div class="att-loader" ng-show="isVisible">\n    <div class="circles">\n        <div id="circle1" class="animated-circle"></div>\n        <div id="circle2" class="animated-circle"></div>\n        <div id="circle3" class="animated-circle"></div>\n    </div>\n</div>\n')}]),angular.module("templates/attMediaPlayer.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attMediaPlayer.html",'<div class="att-media-player">\n  <div class="header">\n      <div class="album-art" ng-click="getCurrentMedia()">\n          <img ng-if="nowPlaying.track.art" ng-src="{{nowPlaying.track.art}}" alt="">\n          <div ng-if="!nowPlaying.track.art" id="headphones-icon-holder-outer">\n              <div id="headphones-icon-holder-inner">\n                  <i class="icon-headphones"></i>\n              </div>\n          </div>\n      </div>\n\n    <div class="media-title">\n      <span class="current">{{nowPlaying.track.title}}</span>\n      <span class="author">{{nowPlaying.track.artist}}</span>\n    </div>\n      <span class="next" ng-show="!playerOption.shuffle">\n          Next: <span class="font-medium">{{getNextTrack().artist}} - {{getNextTrack().title}}</span>\n      </span>\n  </div>\n\n  <div class="main-controls">\n    <div class="btn-group-media">\n      <a ng-click="previous()" class="btn btn-circ small"><span class="icon-skip-left"></span></a>\n        <a ng-if="!isPlayerPaused" ng-click="pause()" class="btn btn-circ large sep-lr-40"><span class="icon-pause"></span></a>\n        <a ng-if="isPlayerPaused" ng-click="play()" class="btn btn-circ large sep-lr-40"><span class="icon-play"></span></a>\n      <a ng-click="next()" class="btn btn-circ small"><span class="icon-skip-right"></span></a>\n    </div>\n  </div>\n\n    <div class="sub-controls">\n        <a class="btn btn-icon sep-r-40" ng-click="toggleShuffle()"><span class="icon-shuffle" ng-class="{\'white-icon\': playerOption.shuffle}"></span></a>\n        <a class="btn btn-icon" ng-click="toggleRepeat()"><span class="icon-repeat" ng-class="{\'white-icon\': playerOption.repeat}"></span></a>\n        <a class="btn btn-icon volume-icon pull-right" ng-class="{\'active\': showVolume}" ng-click="volume()"><span class="icon-volume-down"></span></a>\n        <div class="sep-top-10">\n            <att-slider type="default"\n                        min="{{nowPlaying.progress.min}}"\n                        max="{{nowPlaying.progress.max}}"\n                        ng-model="nowPlaying.progress.val"\n                        text-left="{{nowPlaying.progress.elapsedTime}}"\n                        text-right="{{nowPlaying.progress.remainingTime}}"\n                        parent-control="time">\n            </att-slider>\n        </div>\n    </div>\n\n  <div class="volume-panel" ng-class="{\'show\': showVolume}">\n    VOLUME AT {{currentVolume}}%\n    <att-slider type="default"\n                min="{{minVolume}}"\n                max="{{maxVolume}}"\n                ng-model="currentVolume"\n                text-left="{{minVolume}}"\n                text-right="{{maxVolume}}"\n                parent-control="volume">\n    </att-slider>\n  </div>\n</div>\n')}]),angular.module("templates/attMenu.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attMenu.html",'<div class="att-menu">\n    <style>\n        .activeTemp\n        {\n            float: left;\n            height:0px;\n            width:0px;\n        }\n    </style>\n    <ul class="list">\n        <li ng-repeat="item in items" id="item{{$index}}"\n            ng-class="{active: item.selected, activeTemp: item.selectedTemp}"\n            ng-click="onItemClick(item, false)">\n            <a ng-href="{{item.href}}">{{item.text}}\n            <span ng-bind="item.desc"></span>\n            </a>\n        </li>\n        <li id="sejo" ng-class="{activeTemp: activeTemp}"></li>\n    </ul>\n</div>\n')}]),angular.module("templates/attPinPad.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attPinPad.html",'<div class="att-pin-pad">\n\n\n<div class="pin-pad-heading">\n\n        <input type="password" ng-model="ngModel">\n        <h1>Please enter your pin</h1>\n</div>\n\n\n\n\n\n    <div class="keypad">\n        <div class="panel-row">\n            <button class="btn keypad-button" ng-click="appendToPin(1)">1</button>\n            <button class="btn keypad-button" ng-click="appendToPin(2)">2</button>\n            <button class="btn keypad-button" ng-click="appendToPin(3)">3</button>\n        </div>\n        <div class="panel-row">\n            <button class="btn keypad-button" ng-click="appendToPin(4)">4</button>\n            <button class="btn keypad-button" ng-click="appendToPin(5)">5</button>\n            <button class="btn keypad-button" ng-click="appendToPin(6)">6</button>\n        </div>\n        <div class="panel-row">\n            <button class="btn keypad-button" ng-click="appendToPin(7)">7</button>\n            <button class="btn keypad-button" ng-click="appendToPin(8)">8</button>\n            <button class="btn keypad-button" ng-click="appendToPin(9)">9</button>\n        </div>\n        <div class="panel-row">\n            <button class="btn keypad-button confirm" ng-click="onConfirm()" ng-disabled="isDisabled()"><i class="icon-check-thin"></i></button>\n            <button class="btn keypad-button" ng-click="appendToPin(0)">0</button>\n            <button class="btn keypad-button backspace" ng-click="backspace()"><i class="icon-backspace"></i></button>\n        </div>\n    </div>\n\n\n\n\n</div>')}]),angular.module("templates/attProgressBar.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attProgressBar.html",'<div class="att-progress-bar">\n    <span class="label">{{textLeft}}</span>\n    <span class="value">{{textRight}}</span>\n    <div class="progress-bar-background">\n        <div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="{{min}}" aria-valuemax="{{max}}" ng-style="{width: percent + \'%\'}" aria-valuetext="{{percent | number:0}}%"> </div>\n    </div>\n</div>')}]),angular.module("templates/attSimError.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attSimError.html",'<div class="att-sim-error">\n	<div class="v-align">\n		<div class="symbol animated vehicle-in-motion-animation">\n			<div class="sim-icon"></div>\n		</div>\n		<p class="warning-message">SIM card is missing or inactive.<br>Please contact customer support.</p>\n	</div>\n</div>\n\n')}]),angular.module("templates/attSlider.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attSlider.html",'<div class="range-slider range-slider-{{type}}">\n    <span class="value-left">{{textLeft}}</span>\n    <span class="value-right" ng-show="textRight != \'-NaN:NaN\'">{{textRight}}</span>\n    <input class="input-range input-range-{{type}}" type="range" ng-model="ngModel" min="{{min}}" max="{{max}}" ng-mouseup="sliderMoved()" ng-mousedown="sliderMoving()">\n    <div class="range-fill" ng-click="sliderClick($event)" style="width: {{max? ngModel/max * 100 : ngModel}}%"></div>\n</div> ')}]),angular.module("templates/attVehicleInMotion.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attVehicleInMotion.html",'<div class="att-vehicle-in-motion">\n	<div class="v-align">\n		<div class="symbol animated vehicle-in-motion-animation">\n			<strong>!</strong>\n		</div>		\n		<p class="warning-message">Please do not interact with the screen<br>while the vehicle is in motion</p>\n	</div>\n</div>')}]),angular.module("templates/carousel/carousel.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/carousel/carousel.html",'<div class="att-carousel">\n    <div ng-mouseenter="pause()" ng-mouseleave="play()" class="carousel" ng-swipe-right="prev()" ng-swipe-left="next()">\n        <ol class="carousel-indicators" ng-show="slides.length > 1">\n            <li ng-repeat="slide in slides track by $index" ng-class="{active: isActive(slide)}" ng-click="select(slide)"></li>\n        </ol>\n        <div class="carousel-inner" ng-transclude></div>\n        <a class="left carousel-control" ng-click="prev()" ng-show="slides.length > 1"><span class="fa fa-chevron-left"></span></a>\n        <a class="right carousel-control" ng-click="next()" ng-show="slides.length > 1"><span class="fa fa-chevron-right"></span></a>\n    </div>\n</div>')}]),angular.module("templates/carousel/slide.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/carousel/slide.html","<div ng-class=\"{\n    'active': leaving || (active && !entering),\n    'prev': (next || active) && direction=='prev',\n    'next': (next || active) && direction=='next',\n    'right': direction=='prev',\n    'left': direction=='next'\n  }\" class=\"item text-center\" ng-transclude></div>")}]),angular.module("templates/modal/backdrop.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/modal/backdrop.html",'<div class="modal-backdrop fade {{ backdropClass }}"\n    ng-class="{in: animate}"\n    ng-style="{\'z-index\': 1040 + (index && 1 || 0) + index*10}">\n</div>\n')}]),angular.module("templates/modal/window.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/modal/window.html",'<div tabindex="-1" role="dialog" class="modal fade att-modal animated-short modal-animation" ng-class="{\'modal-animation\': animate}"  ng-click="close($event)">\n  <div class="modal-dialog">\n    <div modal-transclude></div>\n  </div>\n</div>\n')}]),angular.module("templates/tabs/attTab.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/tabs/attTab.html",'<li ng-class="{active: active, disabled: disabled}">\n    <a ng-click="select()" tab-heading-transclude>\n        <i id="tab-icon" ng-class="tabIcon"></i>\n        <span>{{heading}}</span>\n    </a>\n</li>\n')}]),angular.module("templates/tabs/attTabset.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/tabs/attTabset.html",'<div class="att-tabs">\n    <div class="tab-content" ng-class="{\'nav-stacked\': vertical, \'top\': topPosition}">\n        <div class="tab-pane"\n             ng-repeat="tab in tabs"\n             ng-class="{active: tab.active}"\n             tab-content-transclude="tab">\n        </div>\n    </div>\n    <ul class="nav" ng-class="{\'nav-stacked\': vertical, \'top\': topPosition}" ng-transclude></ul>\n    <span id="justify"></span> <!-- Important for alignment - do not remove -->\n</div>\n')}]);